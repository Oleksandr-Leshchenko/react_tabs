{"version":3,"sources":["MyTab.tsx","Tabs.tsx","App.tsx","index.tsx"],"names":["MyTab","state","tab","props","showContent","componentDidUpdate","prevProps","setState","this","type","onClick","onTabSelected","id","title","console","log","content","React","Component","Tabs","tabs","selectedTabId","map","App","myTabs","className","ReactDOM","render","document","getElementById"],"mappings":"2NAaaA,EAAb,4MACEC,MAAe,CACbC,IAAK,EAAKC,MAAMD,IAChBE,YAAa,EAAKD,MAAMC,aAH5B,EAMEC,mBAAqB,SAACC,GAChBA,EAAUF,cAAgB,EAAKH,MAAMG,aAGvC,EAAKG,SAAS,CAAEH,YAAa,EAAKD,MAAMC,eAV9C,4CAcE,WAAU,IAAD,OACP,EAA6BI,KAAKP,MAA1BC,EAAR,EAAQA,IAAKE,EAAb,EAAaA,YAEb,OACE,+BACE,yBACEK,KAAK,SACLC,QAAS,kBAAM,EAAKP,MAAMQ,cAAcT,EAAIU,KAF9C,UAIGV,EAAIW,MAELC,QAAQC,IAAIX,MAEbA,GAAe,4BAAIF,EAAIc,YATjBd,EAAIU,QAlBnB,GAA2BK,IAAMC,WCHpBC,EAAwB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeV,EAAoB,EAApBA,cAC3D,OACE,6BACGS,EAAKE,KAAI,SAAApB,GAAG,OACX,cAAC,EAAD,CACEA,IAAKA,EAELS,cAAeA,EACfP,YAAaiB,IAAkBnB,EAAIU,IAF9BV,EAAIU,UCXbQ,EAAc,CAClB,CAAER,GAAI,QAASC,MAAO,QAASG,QAAS,eACxC,CAAEJ,GAAI,QAASC,MAAO,QAASG,QAAS,eACxC,CAAEJ,GAAI,QAASC,MAAO,QAASG,QAAS,gBAQpCO,E,4MACJtB,MAAe,CACbuB,OAAQJ,EAAKE,KAAI,SAAApB,GAAG,sBAAUA,MAC9BmB,cAAe,S,EAGjBV,cAAgB,SAACC,GACf,EAAKL,SAAS,CAAEc,cAAeT,K,4CAGjC,WACE,MAAkCJ,KAAKP,MAA/BuB,EAAR,EAAQA,OAAQH,EAAhB,EAAgBA,cAKhB,OAFAP,QAAQC,IAAIM,GAGV,mCACE,sBAAKI,UAAU,MAAf,UACE,sDAGGJ,KAEH,cAAC,EAAD,CACED,KAAMI,EACNH,cAAeA,EACfV,cAAeH,KAAKG,yB,GA3BdM,IAAMC,WAmCTK,IChDfG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.47891025.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  tab: Tab,\n  showContent: boolean,\n}\n\ninterface Properties {\n  tab: Tab,\n  onTabSelected: Callback,\n  showContent: boolean,\n}\n\nexport class MyTab extends React.Component<Properties, State> {\n  state: State = {\n    tab: this.props.tab,\n    showContent: this.props.showContent,\n  };\n\n  componentDidUpdate = (prevProps: Properties) => {\n    if (prevProps.showContent !== this.state.showContent) {\n      // this.state.showContent = this.props.showContent;\n      // eslint-disable-next-line\n      this.setState({ showContent: this.props.showContent });\n    }\n  };\n\n  render() {\n    const { tab, showContent } = this.state;\n\n    return (\n      <li key={tab.id}>\n        <button\n          type=\"button\"\n          onClick={() => this.props.onTabSelected(tab.id)}\n        >\n          {tab.title}\n          {// eslint-disable-next-line\n          console.log(showContent)}\n        </button>\n        {showContent && <p>{tab.content}</p>}\n      </li>\n    );\n  }\n}\n","import React from 'react';\n\nimport { MyTab } from './MyTab';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: Callback,\n}\n\nexport const Tabs: React.FC<Props> = ({ tabs, selectedTabId, onTabSelected }) => {\n  return (\n    <ul>\n      {tabs.map(tab => (\n        <MyTab\n          tab={tab}\n          key={tab.id}\n          onTabSelected={onTabSelected}\n          showContent={selectedTabId === tab.id}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport './App.scss';\n\nimport { Tabs } from './Tabs';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ninterface State {\n  myTabs: Tab[],\n  selectedTabId: string,\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    myTabs: tabs.map(tab => ({ ...tab })),\n    selectedTabId: 'tab-1',\n  };\n\n  onTabSelected = (id: string) => {\n    this.setState({ selectedTabId: id });\n  };\n\n  render() {\n    const { myTabs, selectedTabId } = this.state;\n\n    // eslint-disable-next-line\n    console.log(selectedTabId);\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1>\n            Selected tab is\n            &nbsp;\n            {selectedTabId}\n          </h1>\n          <Tabs\n            tabs={myTabs}\n            selectedTabId={selectedTabId}\n            onTabSelected={this.onTabSelected}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}